<%- include('../partials/header') %>

<main class="main-content">
    <!-- Hero Section -->
    <section class="history-hero-section" data-aos="fade-up">
        <div class="container">
            <div class="hero-content">
                <div class="hero-badge" data-aos="fade-down">
                    <i class="fas fa-clock"></i>
                    <span>Our Journey</span>
                </div>
                <h1 class="hero-title" data-aos="fade-up">
                    <%= history.heroSection.title %>
                </h1>
                <p class="hero-subtitle" data-aos="fade-up">
                    <%= history.heroSection.subtitle %>
                </p>
                <% if (history.impact) { %>
                <div class="hero-milestones" data-aos="fade-up">
                    <div class="milestone-item">
                        <span class="milestone-number">2005</span>
                        <span class="milestone-label">Founded</span>
                    </div>
                    <div class="milestone-divider"></div>
                    <div class="milestone-item">
                        <span class="milestone-number">20</span>
                        <span class="milestone-label">Years Strong</span>
                    </div>
                    <div class="milestone-divider"></div>
                    <div class="milestone-item">
                        <span class="milestone-number"><%= history.impact.childrenImpacted %>+</span>
                        <span class="milestone-label">Lives Changed</span>
                    </div>
                </div>
                <% } %>
            </div>
        </div>
    </section>

    <!-- Founder Story Section -->
    <section class="founder-story-section" data-aos="fade-up">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-lg-6" data-aos="fade-right">
                    <div class="founder-image">
                        <% if (history.heroSection && history.heroSection.heroImage && history.heroSection.heroImage.url) { %>
                            <img src="<%= history.heroSection.heroImage.url %>" alt="<%= history.heroSection.quoteAuthor || 'Founder' %>" loading="lazy">
                        <% } else { %>
                            <img src="/src/images/placeholder.jpg" alt="Founder" loading="lazy" class="error-handled">
                        <% } %>
                        <div class="image-overlay">
                            <div class="founder-quote">
                                <i class="fas fa-quote-left"></i>
                                <p>"<%= history.heroSection.quote %>"</p>
                                <span>- <%= history.heroSection.quoteAuthor %></span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-6" data-aos="fade-left">
                    <div class="story-content">
                        <h2><%= history.beginningSection.title %></h2>
                        <p class="story-intro">
                            <%= history.beginningSection.intro %>
                        </p>
                        <% if (history.beginningSection.details && history.beginningSection.details.length > 0) { %>
                        <div class="story-details">
                            <% history.beginningSection.details.forEach(detail => { %>
                            <div class="detail-item">
                                <div class="detail-icon">
                                    <i class="fas <%= detail.icon %>"></i>
                                </div>
                                <div class="detail-content">
                                    <h4><%= detail.title %></h4>
                                    <p><%= detail.description %></p>
                                </div>
                            </div>
                            <% }) %>
                        </div>
                        <% } %>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Interactive Timeline Section -->
    <% if (history.timeline && history.timeline.length > 0) { %>
    <section class="interactive-timeline-section" data-aos="fade-up">
        <div class="container">
            <div class="section-header">
                <h2 class="section-title" data-aos="fade-up">Our Journey Through Time</h2>
                <p class="section-description" data-aos="fade-up" data-aos-delay="100">
                    Explore the key milestones that shaped our organization and the lives we've touched
                </p>
            </div>
            
            <div class="timeline-container">
                <div class="timeline-line"></div>
                
                <% history.timeline.forEach((item, index) => { %>
                <div class="timeline-item <%= index % 2 === 0 ? 'left' : 'right' %>" data-aos="<%= index % 2 === 0 ? 'fade-right' : 'fade-left' %>" data-aos-delay="<%= (index % 5) * 50 %>">
                    <div class="timeline-marker" style="margin: 0 20px;">
                        <div class="marker-year"><%= item.year %></div>
                        <div class="marker-icon">
                            <i class="fas <%= item.icon || 'fa-star' %>"></i>
                        </div>
                    </div>
                    <div class="timeline-content">
                        <% if (item.image && item.image.url) { %>
                        <div class="content-image">
                            <img src="<%= item.image.url %>" alt="<%= item.title %>" loading="lazy">
                        </div>
                        <% } %>
                        <div class="content-text">
                            <h3><%= item.title %></h3>
                            <p><%= item.description %></p>
                            <% if (item.achievements && item.achievements.length > 0) { %>
                            <ul style="list-style: none; padding: 0; margin-top: 15px;">
                                <% item.achievements.forEach(achievement => { %>
                                <li style="margin-bottom: 8px; color: #4ade80; font-size: 14px;">
                                    <i class="fas fa-check-circle" style="color: #4ade80; margin-right: 8px;"></i>
                                    <span style="color: #666;"><%= achievement %></span>
                                </li>
                                <% }) %>
                            </ul>
                            <% } %>
                        </div>
                    </div>
                </div>
                <% }) %>
            </div>
        </div>
    </section>
    <% } %>

    <% if (history.impact) { %>
    <!-- Impact Statistics Section -->
    <section class="impact-stats-section" data-aos="fade-up">
        <div class="container">
            <div class="section-header">
                <h2 class="section-title" data-aos="fade-up">Our Impact in Numbers</h2>
                <p class="section-description" data-aos="fade-up" data-aos-delay="100">
                    Transforming lives, one smile at a time
                </p>
            </div>
            
            <div class="stats-grid">
                <div class="stat-card" data-aos="zoom-in" data-aos-delay="100">
                    <div class="stat-icon">
                        <i class="fas fa-child"></i>
                    </div>
                    <div class="stat-number counter" data-target="<%= history.impact.childrenImpacted %>"><%= history.impact.childrenImpacted %></div>
                    <div class="stat-label">Children Impacted</div>
                </div>

                <div class="stat-card" data-aos="zoom-in" data-aos-delay="200">
                    <div class="stat-icon">
                        <i class="fas fa-hands-helping"></i>
                    </div>
                    <div class="stat-number counter" data-target="<%= history.impact.volunteersEngaged %>"><%= history.impact.volunteersEngaged %></div>
                    <div class="stat-label">Volunteers Engaged</div>
                </div>

                <div class="stat-card" data-aos="zoom-in" data-aos-delay="300">
                    <div class="stat-icon">
                        <i class="fas fa-project-diagram"></i>
                    </div>
                    <div class="stat-number counter" data-target="<%= history.impact.programsLaunched %>"><%= history.impact.programsLaunched %></div>
                    <div class="stat-label">Programs Launched</div>
                </div>

                <div class="stat-card" data-aos="zoom-in" data-aos-delay="400">
                    <div class="stat-icon">
                        <i class="fas fa-trophy"></i>
                    </div>
                    <div class="stat-number counter" data-target="<%= history.impact.awardsReceived %>"><%= history.impact.awardsReceived %></div>
                    <div class="stat-label">Awards Received</div>
                </div>
            </div>
        </div>
    </section>
    <% } %>

    <% if (history.milestones && history.milestones.length > 0) { %>
    <!-- Milestones Section -->
    <section class="milestones-section" data-aos="fade-up" style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); padding: 80px 0; margin-top: 60px;">
        <div class="container">
            <div class="section-header" style="text-align: center; margin-bottom: 50px;">
                <h2 class="section-title" data-aos="fade-up" style="color: white; font-size: 2.5rem; margin-bottom: 15px;">Major Milestones</h2>
                <p class="section-description" data-aos="fade-up" data-aos-delay="100" style="color: rgba(255,255,255,0.9); font-size: 1.1rem;">
                    Celebrating significant achievements over the years
                </p>
            </div>
            
            <div class="milestones-grid" style="display: grid; grid-template-columns: repeat(auto-fill, minmax(280px, 1fr)); gap: 30px; max-width:400px; margin: 0 auto;">
                <% history.milestones.forEach((milestone, index) => { %>
                <div class="milestone-card" data-aos="fade-up" data-aos-delay="<%= index * 100 %>" style="background: rgba(255,255,255,0.1); backdrop-filter: blur(10px); border-radius: 15px; padding: 30px; border: 1px solid rgba(255,255,255,0.2); transition: all 0.3s ease;">
                    <div class="milestone-year" style="font-size: 2.5rem; font-weight: 800; color: #fbbf24; margin-bottom: 15px; text-shadow: 2px 2px 4px rgba(0,0,0,0.2);"><%= milestone.year %></div>
                    <div class="milestone-content">
                        <h4 style="color: white; font-size: 1.3rem; margin-bottom: 10px; font-weight: 600;"><%= milestone.title %></h4>
                        <p style="color: rgba(255,255,255,0.85); font-size: 0.95rem; line-height: 1.6;"><%= milestone.description %></p>
                    </div>
                </div>
                <% }) %>
            </div>
        </div>
    </section>
    <% } %>

    <!-- Growth & Impact Graphs Section -->
    <% if (history.timeline && history.timeline.length > 0) { %>
    <section class="growth-graphs-section" data-aos="fade-up" id="graphsSection" style="padding: 80px 0; background: #f8f9fa;">
        <div class="container">
            <div class="section-header" style="text-align: center; margin-bottom: 50px;">
                <h2 class="section-title" data-aos="fade-up">Growth & Impact Analytics</h2>
                <p class="section-description" data-aos="fade-up" data-aos-delay="100">
                    Visualizing our journey through data and achievements
                </p>
            </div>

            <div class="row" style="gap: 30px;">
                <!-- Achievements Over Time (Bar Chart - First) -->
                <div class="col-12" data-aos="fade-up" style="margin-bottom: 30px;">
                    <div class="chart-card" style="background: white; border-radius: 15px; padding: 30px; box-shadow: 0 4px 6px rgba(0,0,0,0.1);">
                        <h3 class="chart-title" style="margin-bottom: 20px; color: #333; font-size: 1.5rem;">
                            <i class="fas fa-chart-bar" style="color: #10b981; margin-right: 10px;"></i>
                            Achievements & Milestones Timeline
                        </h3>
                        <canvas id="achievementsChart" style="max-height: 350px;"></canvas>
                    </div>
                </div>

                <!-- Timeline Growth Chart (Line Chart - Second) -->
                <div class="col-lg-6" data-aos="fade-right" style="margin-bottom: 30px;">
                    <div class="chart-card" style="background: white; border-radius: 15px; padding: 30px; box-shadow: 0 4px 6px rgba(0,0,0,0.1);">
                        <h3 class="chart-title" style="margin-bottom: 20px; color: #333; font-size: 1.5rem;">
                            <i class="fas fa-chart-line" style="color: #667eea; margin-right: 10px;"></i>
                            Historical Timeline Progress
                        </h3>
                        <canvas id="timelineChart" style="max-height: 400px;"></canvas>
                    </div>
                </div>

                <!-- Impact Distribution Chart (Pie Chart - Third) -->
                <div class="col-lg-6" data-aos="fade-left" style="margin-bottom: 30px;">
                    <div class="chart-card" style="background: white; border-radius: 15px; padding: 30px; box-shadow: 0 4px 6px rgba(0,0,0,0.1);">
                        <h3 class="chart-title" style="margin-bottom: 20px; color: #333; font-size: 1.5rem;">
                            <i class="fas fa-chart-pie" style="color: #764ba2; margin-right: 10px;"></i>
                            Impact Distribution
                        </h3>
                        <canvas id="impactChart" style="max-height: 400px;"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <% } %>

    <!-- Call to Action Section -->
    <section class="cta-section" data-aos="fade-up">
        <div class="container">
            <div class="cta-content">
                <h2>Be Part of Our Journey</h2>
                <p>Join us in creating more transformation stories and spreading smiles</p>
                <div class="cta-buttons">
                    <a href="/get-involved/volunteer" class="btn btn-primary">
                        <i class="fas fa-hands-helping"></i>
                        Start Volunteering
                    </a>
                    <a href="/get-involved/donate" class="btn btn-secondary">
                        <i class="fas fa-heart"></i>
                        Support Our Mission
                    </a>
                </div>
            </div>
        </div>
    </section>
</main>

<link rel="stylesheet" href="/css/history.css">

<!-- Chart.js Library -->
<script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.min.js"></script>

<script>
    // Counter animation for impact stats
    const counters = document.querySelectorAll('.counter');
    const speed = 200;

    const runCounter = (counter) => {
        const updateCount = () => {
            const target = +counter.getAttribute('data-target');
            const count = +counter.innerText;
            const inc = target / speed;

            if (count < target) {
                counter.innerText = Math.ceil(count + inc);
                setTimeout(updateCount, 1);
            } else {
                counter.innerText = target;
            }
        };
        updateCount();
    };

    // Intersection Observer for counters
    const counterObserver = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                runCounter(entry.target);
                counterObserver.unobserve(entry.target);
            }
        });
    }, { threshold: 0.5 });

    counters.forEach(counter => {
        counterObserver.observe(counter);
    });

    // Timeline marker hover effects
    const timelineMarkers = document.querySelectorAll('.timeline-marker');
    timelineMarkers.forEach(marker => {
        marker.addEventListener('mouseenter', function() {
            this.closest('.timeline-item').classList.add('highlight-active');
        });
        
        marker.addEventListener('mouseleave', function() {
            this.closest('.timeline-item').classList.remove('highlight-active');
        });
    });

    <% if (history.timeline && history.timeline.length > 0) { %>
    // Prepare timeline data for charts
    const timelineData = <%- JSON.stringify(history.timeline) %>;
    const impactData = <%- JSON.stringify(history.impact || {}) %>;

    // Sort timeline by year
    timelineData.sort((a, b) => a.year - b.year);

    // Function to get current theme colors
    function getThemeColors() {
        const currentTheme = document.documentElement.getAttribute('data-theme');
        const isDark = currentTheme === 'dark';
        return {
            textColor: isDark ? '#e5e7eb' : '#374151',
            gridColor: isDark ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.05)',
            backgroundColor: isDark ? '#1f2937' : '#ffffff',
            cardBackground: isDark ? '#111827' : '#ffffff',
            sectionBackground: isDark ? '#000000' : '#f8f9fa',
            titleColor: isDark ? '#f3f4f6' : '#333333'
        };
    }

    let { textColor, gridColor, backgroundColor, cardBackground, sectionBackground, titleColor } = getThemeColors();

    // Store chart instances
    let timelineChart, impactChart, achievementsChart;

    // Function to update chart card backgrounds
    function updateCardBackgrounds() {
        const colors = getThemeColors();
        
        // Update chart card backgrounds
        const chartCards = document.querySelectorAll('.chart-card');
        chartCards.forEach(card => {
            card.style.backgroundColor = colors.cardBackground;
        });
        
        // Update section background
        const graphsSection = document.getElementById('graphsSection');
        if (graphsSection) {
            graphsSection.style.backgroundColor = colors.sectionBackground;
        }
        
        // Update chart titles
        const chartTitles = document.querySelectorAll('.chart-title');
        chartTitles.forEach(title => {
            title.style.color = colors.titleColor;
        });
    }

    // Function to update all charts with new theme
    function updateChartsTheme() {
        const colors = getThemeColors();
        
        // Update card backgrounds
        updateCardBackgrounds();
        
        if (timelineChart) {
            timelineChart.options.plugins.legend.labels.color = colors.textColor;
            timelineChart.options.scales.y.ticks.color = colors.textColor;
            timelineChart.options.scales.x.ticks.color = colors.textColor;
            timelineChart.options.scales.y.grid.color = colors.gridColor;
            timelineChart.update();
        }
        
        if (impactChart) {
            impactChart.options.plugins.legend.labels.color = colors.textColor;
            impactChart.update();
        }
        
        if (achievementsChart) {
            achievementsChart.options.plugins.legend.labels.color = colors.textColor;
            achievementsChart.options.scales.y.ticks.color = colors.textColor;
            achievementsChart.options.scales.x.ticks.color = colors.textColor;
            achievementsChart.options.scales.y.grid.color = colors.gridColor;
            achievementsChart.update();
        }
    }

    // Watch for theme changes
    const observer = new MutationObserver((mutations) => {
        mutations.forEach((mutation) => {
            if (mutation.attributeName === 'data-theme') {
                updateChartsTheme();
            }
        });
    });

    observer.observe(document.documentElement, {
        attributes: true,
        attributeFilter: ['data-theme']
    });

    // Set initial card backgrounds
    updateCardBackgrounds();

    // 1. Timeline Growth Chart (Line Chart)
    const timelineCtx = document.getElementById('timelineChart');
    if (timelineCtx) {
        timelineChart = new Chart(timelineCtx, {
            type: 'line',
            data: {
                labels: timelineData.map(item => item.year),
                datasets: [{
                    label: 'Milestones Achieved',
                    data: timelineData.map((item, index) => index + 1),
                    borderColor: '#667eea',
                    backgroundColor: 'rgba(102, 126, 234, 0.1)',
                    fill: true,
                    tension: 0.4,
                    pointRadius: 6,
                    pointHoverRadius: 8,
                    pointBackgroundColor: '#667eea',
                    pointBorderColor: '#fff',
                    pointBorderWidth: 2
                }, {
                    label: 'Achievements Count',
                    data: timelineData.map(item => item.achievements ? item.achievements.length : 0),
                    borderColor: '#10b981',
                    backgroundColor: 'rgba(16, 185, 129, 0.1)',
                    fill: true,
                    tension: 0.4,
                    pointRadius: 6,
                    pointHoverRadius: 8,
                    pointBackgroundColor: '#10b981',
                    pointBorderColor: '#fff',
                    pointBorderWidth: 2
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: true,
                plugins: {
                    legend: {
                        display: true,
                        position: 'top',
                        labels: {
                            font: { size: 12, weight: 'bold' },
                            padding: 15,
                            color: textColor
                        }
                    },
                    tooltip: {
                        callbacks: {
                            afterLabel: function(context) {
                                const index = context.dataIndex;
                                return timelineData[index].title;
                            }
                        }
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            stepSize: 1,
                            font: { size: 11 },
                            color: textColor
                        },
                        grid: {
                            color: gridColor
                        }
                    },
                    x: {
                        ticks: {
                            font: { size: 11 },
                            color: textColor
                        },
                        grid: {
                            display: false
                        }
                    }
                }
            }
        });
    }

    // 2. Impact Distribution Chart (Pie Chart)
    const impactCtx = document.getElementById('impactChart');
    if (impactCtx) {
        impactChart = new Chart(impactCtx, {
            type: 'pie',
            data: {
                labels: ['Children Impacted', 'Volunteers Engaged', 'Programs Launched', 'Awards Received'],
                datasets: [{
                    data: [
                        impactData.childrenImpacted || 0,
                        impactData.volunteersEngaged || 0,
                        impactData.programsLaunched || 0,
                        impactData.awardsReceived || 0
                    ],
                    backgroundColor: [
                        'rgba(102, 126, 234, 0.8)',
                        'rgba(16, 185, 129, 0.8)',
                        'rgba(245, 158, 11, 0.8)',
                        'rgba(239, 68, 68, 0.8)'
                    ],
                    borderColor: '#fff',
                    borderWidth: 2,
                    hoverOffset: 10
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: true,
                plugins: {
                    legend: {
                        position: 'bottom',
                        labels: {
                            font: { size: 12, weight: 'bold' },
                            padding: 15,
                            color: textColor
                        }
                    },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                const label = context.label || '';
                                const value = context.parsed || 0;
                                const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                const percentage = ((value / total) * 100).toFixed(1);
                                return `${label}: ${value} (${percentage}%)`;
                            }
                        }
                    }
                }
            }
        });
    }

    // 3. Achievements Over Time (Bar Chart)
    const achievementsCtx = document.getElementById('achievementsChart');
    if (achievementsCtx) {
        // Create gradient colors for each bar
        const barColors = timelineData.map((item, index) => {
            const colors = [
                'rgba(102, 126, 234, 0.8)',
                'rgba(16, 185, 129, 0.8)',
                'rgba(245, 158, 11, 0.8)',
                'rgba(239, 68, 68, 0.8)',
                'rgba(139, 92, 246, 0.8)',
                'rgba(236, 72, 153, 0.8)'
            ];
            return colors[index % colors.length];
        });

        const barBorderColors = timelineData.map((item, index) => {
            const colors = ['#667eea', '#10b981', '#f59e0b', '#ef4444', '#8b5cf6', '#ec4899'];
            return colors[index % colors.length];
        });

        achievementsChart = new Chart(achievementsCtx, {
            type: 'bar',
            data: {
                labels: timelineData.map(item => item.year + '\n' + item.title.substring(0, 20) + '...'),
                datasets: [{
                    label: 'Number of Achievements',
                    data: timelineData.map(item => item.achievements ? item.achievements.length : 0),
                    backgroundColor: barColors,
                    borderColor: barBorderColors,
                    borderWidth: 2,
                    borderRadius: 8,
                    hoverBackgroundColor: barBorderColors
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: true,
                plugins: {
                    legend: {
                        display: true,
                        position: 'top',
                        labels: {
                            font: { size: 12, weight: 'bold' },
                            padding: 15,
                            color: textColor
                        }
                    },
                    tooltip: {
                        callbacks: {
                            afterLabel: function(context) {
                                const index = context.dataIndex;
                                const achievements = timelineData[index].achievements || [];
                                return achievements.length > 0 ? '\n' + achievements.join('\n') : 'No achievements listed';
                            }
                        }
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            stepSize: 1,
                            font: { size: 11 },
                            color: textColor
                        },
                        grid: {
                            color: gridColor
                        }
                    },
                    x: {
                        ticks: {
                            font: { size: 10 },
                            maxRotation: 45,
                            minRotation: 45,
                            color: textColor
                        },
                        grid: {
                            display: false
                        }
                    }
                }
            }
        });
    }
    <% } %>
</script>

<%- include('../partials/footer') %>